// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Portfolio;

namespace API.Migrations
{
    [DbContext(typeof(PortfolioContext))]
    [Migration("20220529210954_ChangedRelation")]
    partial class ChangedRelation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("ExperienceTableSkillTable", b =>
                {
                    b.Property<string>("ExperiencesId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SkillsId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ExperiencesId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("ExperienceTableSkillTable");
                });

            modelBuilder.Entity("Portfolio.Object.BDD.EducationTable", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("School")
                        .HasColumnType("text");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Education");
                });

            modelBuilder.Entity("Portfolio.Object.BDD.ExperienceTable", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Company")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("GitLink")
                        .HasColumnType("text");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Experience");
                });

            modelBuilder.Entity("Portfolio.Object.BDD.SkillCategoryTable", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("LevelOfExperience")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SkillCategory");
                });

            modelBuilder.Entity("Portfolio.Object.BDD.SkillTable", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("LevelOfExperience")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Skill");
                });

            modelBuilder.Entity("SkillCategoryTableSkillTable", b =>
                {
                    b.Property<string>("CategoriesId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SkillsId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("CategoriesId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("SkillCategoryTableSkillTable");
                });

            modelBuilder.Entity("ExperienceTableSkillTable", b =>
                {
                    b.HasOne("Portfolio.Object.BDD.ExperienceTable", null)
                        .WithMany()
                        .HasForeignKey("ExperiencesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Portfolio.Object.BDD.SkillTable", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SkillCategoryTableSkillTable", b =>
                {
                    b.HasOne("Portfolio.Object.BDD.SkillCategoryTable", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Portfolio.Object.BDD.SkillTable", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
